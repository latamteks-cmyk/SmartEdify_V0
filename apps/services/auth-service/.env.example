# Auth Service - .env.example (desarrollo/test)

# Entorno
NODE_ENV=development

# HTTP/Logging
AUTH_PORT=8080
AUTH_LOG_LEVEL=info
AUTH_SERVICE_NAME=auth-service

# Admin endpoints (REQUIRED en production)
AUTH_ADMIN_API_KEY=changeme-admin-key
AUTH_ADMIN_API_HEADER=x-admin-api-key

# Postgres (si se usa DB real en dev)
PGHOST=localhost
PGPORT=5432
PGUSER=postgres
PGPASSWORD=postgres
PGDATABASE=smartedify

# Redis
REDIS_HOST=localhost
REDIS_PORT=6379

# JWT (simétrico fallback - no usar en producción si RS256 activo)
AUTH_JWT_ACCESS_TTL=900s
AUTH_JWT_REFRESH_TTL=30d
# AUTH_JWT_ACCESS_SECRET=
# AUTH_JWT_REFRESH_SECRET=

# Issuer/Public
# AUTH_ISSUER=
# AUTH_ISSUER_URL=
# AUTH_PUBLIC_URL=
# AUTH_BASE_URL=
# AUTH_HOST=localhost
# AUTH_USE_TLS=false

# Rate limiting
AUTH_LOGIN_WINDOW_MS=60000
AUTH_LOGIN_MAX_ATTEMPTS=10
AUTH_BRUTE_WINDOW_SEC=300
AUTH_BRUTE_MAX_ATTEMPTS=20

# Roles/Permissions defaults
AUTH_DEFAULT_ROLE=user
# AUTH_FALLBACK_ROLES="admin user guest"
# AUTH_FALLBACK_PERMISSIONS="read write"
# AUTH_ROLE_PERMISSIONS='{"admin":["*"]}'

# User Service client (mock por defecto)
AUTH_USER_SERVICE_MODE=mock
# AUTH_USER_SERVICE_URL=http://localhost:8082
AUTH_USER_SERVICE_TIMEOUT_MS=3000
AUTH_USER_SERVICE_RETRIES=2
AUTH_USER_SERVICE_VALIDATE_PATH=/internal/users/validate
# AUTH_USER_SERVICE_API_KEY=

# OTEL (opcional)
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=

# Tests
SKIP_DB_TESTS=1
