openapi: 3.0.3
info:
  title: Auth Service API
  version: 1.1.0
paths:
  /register:
    post:
      summary: Registro de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Usuario registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
  /login:
    post:
      summary: Login de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /logout:
    post:
      summary: Logout de usuario y revocación de token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
      responses:
        '204':
          description: Logout exitoso
        '401':
          description: Token inválido o expirado
  /forgot-password:
    post:
      summary: Solicitud de recuperación de contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          description: Email enviado
  /reset-password:
    post:
      summary: Reset de contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Contraseña actualizada
  /roles:
    get:
      summary: Listado de roles
      parameters:
        - in: query
          name: tenantId
          schema:
            type: string
          description: Tenant opcional para filtrar roles.
      responses:
        '200':
          description: Lista de roles disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
  /permissions:
    get:
      summary: Listado de permisos
      parameters:
        - in: query
          name: tenantId
          schema:
            type: string
          description: Tenant opcional para calcular permisos combinados.
        - in: query
          name: role
          schema:
            type: string
          description: Si se especifica, devuelve permisos asociados a ese rol.
      responses:
        '200':
          description: Lista de permisos
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PermissionsResponse'
                  - $ref: '#/components/schemas/PermissionsByRoleResponse'
components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        name:
          type: string
          minLength: 2
        tenant_id:
          type: string
          description: Tenant opcional. Si no se envía se usa "default".
      required:
        - email
        - password
        - name
    RegisterResponse:
      type: object
      properties:
        message:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
            email:
              type: string
              format: email
            name:
              type: string
            roles:
              type: array
              items:
                type: string
          required:
            - id
            - email
            - name
            - roles
      required:
        - message
        - user
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        tenant_id:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        message:
          type: string
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
          enum: [Bearer]
        expires_in:
          type: integer
          description: Segundos restantes de vida del access token.
        roles:
          type: array
          items:
            type: string
      required:
        - access_token
        - refresh_token
        - token_type
        - expires_in
        - roles
    LogoutRequest:
      type: object
      properties:
        token:
          type: string
          minLength: 10
          description: Token (access o refresh) a revocar.
      required:
        - token
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email
    ResetPasswordRequest:
      type: object
      properties:
        token:
          type: string
        newPassword:
          type: string
          minLength: 8
      required:
        - token
        - newPassword
    RolesResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string
          description: Lista ordenada de roles disponibles.
      required:
        - roles
    PermissionsResponse:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
      required:
        - permissions
    PermissionsByRoleResponse:
      type: object
      properties:
        role:
          type: string
        permissions:
          type: array
          items:
            type: string
      required:
        - role
        - permissions
