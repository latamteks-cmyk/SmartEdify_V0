# Tenant Service - .env.example (desarrollo/test)

# Entorno
NODE_ENV=development

# HTTP/Logging
TENANT_PORT=8083
TENANT_LOG_LEVEL=info

# Base de datos
# En production es obligatorio TENANT_DB_URL. En dev/test se puede construir con PG*/POSTGRES_*
# TENANT_DB_URL=postgres://postgres:postgres@localhost:5542/smartedify
PGHOST=localhost
PGPORT=5542
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=smartedify

# JWKS/JWT (opcional)
# TENANT_JWKS_URL=http://auth-service:8080/.well-known/jwks.json
TENANT_JWKS_CACHE_TTL_MS=600000
# TENANT_JWT_PUBLIC_KEY="-----BEGIN PUBLIC KEY-----\n...\n-----END PUBLIC KEY-----\n"

# Outbox / Publisher / Consumer
TENANT_OUTBOX_POLL_INTERVAL_MS=500
TENANT_OUTBOX_BATCH_SIZE=50
TENANT_PUBLISHER=logging
# KAFKA_BROKERS=localhost:9092
KAFKA_CLIENT_ID=tenant-service
KAFKA_TOPIC_PREFIX=tenant
KAFKA_ACKS=-1
TENANT_CONSUMER=none
KAFKA_CONSUMER_GROUP_ID=tenant-service-consumer
KAFKA_CONSUMER_LAG_INTERVAL_MS=10000
RABBITMQ_URL=amqp://guest:guest@localhost:5672
RABBITMQ_EXCHANGE=tenant.events
RABBITMQ_ROUTING_KEY=tenant.event
RABBITMQ_QUEUE=tenant-events
RABBITMQ_DLX=dlx
RABBITMQ_DEAD_LETTER_QUEUE=dead-letter
# RABBITMQ_DEAD_LETTER_ROUTING_KEY=
RABBITMQ_DLQ_CHECK_INTERVAL_MS=30000
RABBITMQ_DLQ_ALERT_THRESHOLD=1
OUTBOX_MAX_PAYLOAD_BYTES=65536
TENANT_CONTEXT_CACHE_TTL_MS=60000

# Tests
SKIP_DB_TESTS=1
