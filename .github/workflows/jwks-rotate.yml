name: jwks-rotate

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev|staging|production)"
        required: true
        default: dev
  schedule:
    - cron: '0 5 * * *'

concurrency:
  group: jwks-rotate-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || vars.JWKS_ROTATE_SCHEDULE_ENVIRONMENT || 'dev' }}
  cancel-in-progress: false

jobs:
  rotate:
    name: Rotate JWKS (${{ env.TARGET_ENV }})
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || vars.JWKS_ROTATE_SCHEDULE_ENVIRONMENT || 'dev' }}
    env:
      SERVICE_DIR: apps/services/auth-service
      NODE_ENV: production
      TARGET_ENV: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || vars.JWKS_ROTATE_SCHEDULE_ENVIRONMENT || 'dev' }}
      AUTH_BASE_URL: ${{ vars.AUTH_SERVICE_BASE_URL }}
      AUTH_ADMIN_API_KEY: ${{ secrets.AUTH_SERVICE_ADMIN_API_KEY }}
      AUTH_ADMIN_API_HEADER: ${{ vars.AUTH_SERVICE_ADMIN_API_HEADER }}
      PGHOST: ${{ secrets.AUTH_SERVICE_PGHOST }}
      PGPORT: ${{ vars.AUTH_SERVICE_PGPORT }}
      PGUSER: ${{ secrets.AUTH_SERVICE_PGUSER }}
      PGPASSWORD: ${{ secrets.AUTH_SERVICE_PGPASSWORD }}
      PGDATABASE: ${{ vars.AUTH_SERVICE_PGDATABASE }}
      JWKS_METRICS_PUSH_URL: ${{ vars.JWKS_METRICS_PUSH_URL }}
      AUTH_ADMIN_RATE_LIMIT_WINDOW_MS: ${{ vars.AUTH_ADMIN_RATE_LIMIT_WINDOW_MS }}
      AUTH_ADMIN_RATE_LIMIT_MAX: ${{ vars.AUTH_ADMIN_RATE_LIMIT_MAX }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: ${{ env.SERVICE_DIR }}/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.SERVICE_DIR }}
      - name: Run rotation job
        env:
          AUTH_LOG_LEVEL: warn
        run: npm run jwks:rotate
        working-directory: ${{ env.SERVICE_DIR }}
      - name: Print note
        run: echo "Rotation executed. Validate metrics and JWKS exposure before closing run."
